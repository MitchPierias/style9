{
    "root": true,
    "parser": "@typescript-eslint/parser", // Allow ESLint to parse TypeScript
    "extends": [
      "plugin:@typescript-eslint/recommended", // Recommended rules from @typescript-eslint
      "prettier/@typescript-eslint", // Disables ESLint rules that would conflict with Prettier
      "plugin:prettier/recommended", // Links Prettier errors into ESLint errors
      "plugin:jest/recommended",
      "plugin:jest-formatting/recommended" // Adds padding between test blocks
    ],
    "plugins": [
      "jest",
      "simple-import-sort",
      "import",
      "jest-formatting"
    ],
    "parserOptions": {
      "ecmaVersion": 2018, // Parse modern ECMAScript features
      "sourceType": "module", // Allow module imports
      "ecmaFeatures": {
        "jsx": true
      }
    },
      "rules": {
        "for-direction": "warn", // Check for-loop increments counter
        "getter-return": "error", // Enforce return statements in getters
        "no-async-promise-executor": "error", // Disallow using an async function as a Promise executor
        "no-await-in-loop": "error", // Disallow `await` inside of loops
        "no-compare-neg-zero": "error", // Disallow comparing against -0
        "no-cond-assign": "error", // Disallow conditional assignment
        "no-constant-condition": "warn", // Disallow constant expressions in conditions
        "no-console": "warn", // Disallow the use of console commands
        "no-control-regex": "error", // Disallow control characters in regex
        "no-debugger": "error", // Disallow the use of `debugger`
        "no-dupe-args": "error", // Disallow duplicate arguments in `function` definitions
        "no-dupe-else-if": "error", // Disallow duplicate conditions in if-else chains
        "no-dupe-keys": "error", // Disallow duplicate keys in object literals
        "no-empty": "warn", // Disallow empty function blocks
        "no-empty-character-class": "error", // Disallow empty character class in regular expressions
        "no-ex-assign": "error", // Prevents destructive reassigning of exception errors
        "no-extra-boolean-cast": "warn", // Disallows unnecessary boolean casts
        "prefer-arrow-callback": "error", // Convert function to an arrow when possible
        "max-lines-per-function": ["error", 160],
        "max-lines": ["error", 325],
        "max-len": ["error", 140], // Sets the limit on line length
        "arrow-body-style": ["error", "as-needed"], // Controls the use of braces around arrow function body
        "no-magic-numbers": ["error", { "ignore": [0,1] }], // Ensures that special numbers are declared as constants    
        "no-extra-parens": [
          "error",
          "all",
          {
            "returnAssign": true,
            "nestedBinaryExpressions": false,
            "ignoreJSX": "all",
            "enforceForArrowConditionals": true,
            "enforceForSequenceExpressions": true
          }
        ],
        "no-extra-semi": "warn", // Disallows additional semicolons
        "no-unexpected-multiline": "error", // Fixes issues caused by removing semicolons
        "@typescript-eslint/interface-name-prefix": [
          {
            "prefixWithI": "never"
          }
        ],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "sort-imports": "off",
        "import/first": "error",
        "import/newline-after-import": "error",
        "padding-line-between-statements": ["error", 
          // Requires blank lines before all return statements
          { "blankLine": "always", "prev": "*", "next": "return" },
          // Requires blank lines after every sequence of variables
          { "blankLine": "always", "prev": ["const", "let"], "next": "*" }, 
          { "blankLine": "any", "prev": ["const", "let"], "next": ["const", "let"]},
          // Requires blank lines between clauses in switch statements
          { "blankLine": "always", "prev": ["case", "default"], "next": "*" }
        ],
        "import/no-duplicates": "error",
        "simple-import-sort/imports": ["error", {
          "groups": [
            // Internal packages
            ["^(@style9)(/.*|$)"],
            // Side effect imports
            ["^\\u0000"],
            // Absolute imports and other imports such as Vue-style `@/foo`.
            ["^[^.]"],
            // Relative imports.
            ["^\\."]
          ]
        }],
        "simple-import-sort/exports": "error" // Primarily for sorting `index.ts` files
      },
      "noInlineConfig": false,
      "overrides": [
        {
          "files": ["@types/*"],
          "rules": {
            "no-magic-numbers":"off"
          }
        },
        {
          "files": ["*.test.*"],
          "rules": {
            "no-unused-expressions": "warn",
            "no-magic-numbers":"off"
          }
        }
      ]
  }